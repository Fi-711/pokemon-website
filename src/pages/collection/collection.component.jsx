import React, { useEffect, useState } from 'react';
import { connect } from 'react-redux';
// uuidv4 for unique ideas as collection items may have same id if generated by shop page as well
import { v4 as uuidv4 } from 'uuid';

import CollectionItem from '../../components/collection-item/collection-item.component';
import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';
import { selectCollection } from '../../redux/shop/shop.selectors';
import PokeballLoader from '../../components/pokeball-loader/pokeball-loader.component';
import SearchBar from '../../components/searchbar/searchbar.component';

import { Grid, GridItem, Center, Box } from '@chakra-ui/react';
import './collection.styles.scss';

/*
  Renders all the cards of a given set - needs data from "collections" - this is fetched by either going to shop page or directory. 
  However, user may try and get here directly through address bar so this page is connected to redux store and can check if connections is empty,
  if empty then fetch otherwise can load cards from set 
*/
const CollectionPage = ({ collection, fetchCollectionsStartAsync }) => {
  const [cardSet, setCardSet] = useState([]);

  useEffect(() => {
    if (!collection) {
      fetchCollectionsStartAsync();
      collection && collection[0] && setCardSet(collection[0].cards);
    } else {
      collection && collection[0] && setCardSet(collection[0].cards);
    }
  }, [fetchCollectionsStartAsync, collection]);

  return !collection ? (
    <PokeballLoader />
  ) : collection[0] ? (
    <Grid className='collection-page' mt={[8, 8, 8, 8, 12]}>
      <GridItem mx='auto'>
        <Center className='logo-img' mx='auto' justify='center' align='center'>
          <img
            src={collection[0].logo}
            alt={collection[0].name}
            className='title'
          />
        </Center>
      </GridItem>
      <GridItem h={5} ml={14} mb={4}>
        <Box>
          <SearchBar
            cardSet={cardSet}
            setCardSet={setCardSet}
            collection={collection}
          />
        </Box>
      </GridItem>
      <GridItem justify='center' mx='auto'>
        <Grid
          className='item-container'
          templateColumns={[
            'repeat(1, 1fr)',
            'repeat(1, 1fr)',
            'repeat(2, 1fr)',
            'repeat(3, 1fr)',
            'repeat(4, 1fr)',
            'repeat(5, 1fr)',
          ]}
          mx='auto'
          justify='center'
          mb={12}
          align='center'
          gap={2}
        >
          {cardSet.map((card) => (
            <Center
              className='items'
              key={uuidv4()}
              justify='center'
              mx='auto'
              width='300px'
            >
              <CollectionItem card={card} />
            </Center>
          ))}
        </Grid>
      </GridItem>
    </Grid>
  ) : null;
};

const mapStateToProps = (state, ownProps) => {
  return {
    collection: selectCollection(ownProps.match.params.collectionId)(state),
  };
};

const mapDispatchToProps = (dispatch) => ({
  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),
});

export default connect(mapStateToProps, mapDispatchToProps)(CollectionPage);
